@model IEnumerable<DAL.Entities.Order>
@{
    ViewBag.Title = "Orders List";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Orders List</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "DashBoard")">Home</a>
            </li>
            <li class="active">
                <strong>Orders</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <div class="ibox-tools" style="margin-top: -5px">
                        <a id="btnMakeNewOrder" class="btn btn-primary btn-sm">
                            <i class="fa fa-plus"></i> Make Order
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Config option 1</a>
                            </li>
                            <li>
                                <a href="#">Config option 2</a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="ibox-content">
                    <table id="tblDriversList" class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Customer Name</th>
                                <th>Customer Phone</th>
                                <th>Order Number</th>
                                <th>Time To Reach PickUpLocation</th>
                                <th>Time To Reach DropOffLocation</th>
                                <th>Order Status</th>
                                <th>Vehicle Type</th>
                                <th class="text-right" data-sort-ignore="true">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr id="driver_@item.Id">
                                    <td>@item.CustomerName</td>
                                    <td>@item.CustomerPhone</td>
                                    <td>@item.OrderNumber</td>
                                    <td>@item.TimeToReachPickUpLocation</td>
                                    <td>@item.TimeToReachDropOffLocation</td>
                                    <td>@item.OrderStatus</td>
                                    <td>@item.VehicleType</td>
                                    <td class="text-center">
                                        <div class="btn-group">
                                            <button class="btn btn-primary btn-xs" data-title="Preview" data-id="@item.Id" id="btnPreviewDriver">
                                                <span class="fa fa-eye" title="Preview"></span>
                                            </button>
                                            <button class="btn btn-danger btn-xs" data-title="Delete" data-id="@item.Id" id="btnDeleteDriver">
                                                <span class="glyphicon glyphicon-trash" title="Delete"></span>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>Customer Name</th>
                                <th>Customer Phone</th>
                                <th>Order Number</th>
                                <th>Time To Reach PickUpLocation</th>
                                <th>Time To Reach DropOffLocation</th>
                                <th>Order Status</th>
                                <th>Vehicle Type</th>
                                <th class="text-center" data-sort-ignore="true">Action</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



@Html.Partial("~/Views/BusinessOrder/Partials/_AddOrder.cshtml")

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/sweetAlert")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/validate")
}

<script>
    $(document).ready(function () {
        $('#tblDriversList').DataTable({
            dom: '<"' +
                'html5buttons' +
                '' +
                '"B>lTfgitp',
            buttons: [
                { extend: 'copy' },
                { extend: 'csv' },
                { extend: 'excel', title: 'OrdersList' },
                {
                    extend: 'pdf',
                    title: 'ExampleFile',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6]
                    }
                },
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');
                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ]
        });

        $(".location").keypress(function () {
            GetRoute();
        });

        var validator = $("#submitOrderForm").validate({
            rules: {
                CustomerName: {
                    required: true
                },
                CustomerNumber: {
                    required: true
                },
                TimeToReachPickUpLocation: {
                    required: true
                },
                TimeToReachDropOffLocation: {
                    required: true
                },
                PickUpLocation: {
                    required: true
                },
                DropOffLocation: {
                    required: true
                },
                OrderNumber: {
                    required: true
                }
            },
            highlight: function (element) {
                if (element.id === 'country') {
                    $(element).addClass('invalid').removeClass('valid');
                } else {
                    var icon = $(element).closest('div')[0].lastElementChild;
                    $(icon).removeClass('glyphicon-ok-sign').addClass('glyphicon-remove-sign');
                }
            },
            unhighlight: function (element) {
                if (element.id === "country") {
                    $(element).addClass('valid').removeClass('invalid');
                } else {
                    var icon = $(element).closest('div')[0].lastElementChild;
                    $(icon).removeClass('glyphicon-remove-sign').addClass('glyphicon-ok-sign');
                }
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.length) {
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $("input").keydown(function () {
            validator.element(this);
        });
        
        function clearOrdersModal() {
            $('#customerName').val("");
            $('#customerPhone').val("");
            $('#timeToReachPickUpLocation').val("");
            $('#timeToReachDropOffLocation').val("");
            $('#pickUpLocation').val("");
            $('#dropOffLocation').val("");
            $('#orderNumber').val("");
            $('#vehicleType-selectized').val("");
            validator.resetForm();
            $('.message-icon').removeClass('glyphicon-ok-sign');
            $('.message-icon').removeClass('glyphicon-remove-sign');
            $('#country').removeClass('valid');
            $('#country').removeClass('invalid');
        }

        $("#addOrderBtn").on("click",
            function (e) {
                var form = $("#submitOrderForm");
                form.validate();
                form.valid();
                validator.form();
                e.preventDefault();
                if (validator.form()) {
                    addOrder(form);
                    //$("#submitOrderForm").modal("hide");
                } else {
                    $("#submitOrderForm").modal("show");
                    return;
                }
            });

        $(document).on('click', "#btnMakeNewOrder", function () {
            clearOrdersModal();
            $("#addOrderModal").modal("show");
        });
        
    });
       
    function addOrder(form) {
        GetLongLatPickUp();
        GetLongLatDropOff();
        $.post("/BusinessOrder/AddNewOrder",
            form.serialize(), function (data) {
                window.UnBlockUi();
                if (data.Success) {
                    for (let i = 0; i < data.Messages.length; i++) {
                        window.toastr.success(data.Messages[i].Value);
                    }
                } else {
                    for (let i = 0; i < data.Messages.length; i++) {
                        window.toastr.error(data.Messages[i].Value);
                    }
                }
            });
    }

    $("#vehicleType").selectize({
        searchField: ['text'],
        maxItems: 1,
        allowEmptyOption: false,
        plugins: ['remove_button'],
        preload: true,
        load: function (query, callback) {
            $.post("/home/GetVehicleTypes")
                .done(function (data) {
                    if (data !== '') {
                        callback(data);
                    }
                }).fail(function (xmlHttpRequest, textStatus, errorThrown) {
                });
        }
    });
 
    var rideType;
    var source, destination;
    var directionsDisplay;
    var map;
    var directionsService = new google.maps.DirectionsService();
    var mapElement = document.getElementById('map_canvas');
    function getMapStart() {
        var txtLatitude = $("#txtLatitude");
        var txtLongitude = $("#txtLongitude");
        return {
            zoom: 12,
            center: new window.google.maps.LatLng(txtLatitude.val(), txtLongitude.val()),
            styles: [
                {
                    "featureType": "water",
                    "stylers": [
                        { "saturation": 43 },
                        { "lightness": -11 },
                        { "hue": "#0088ff" }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "geometry.fill",
                    "stylers": [
                        { "hue": "#ff0000" },
                        { "saturation": -100 },
                        { "lightness": 99 }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "geometry.stroke",
                    "stylers": [
                        { "color": "#808080" },
                        { "lightness": 54 }
                    ]
                },
                {
                    "featureType": "landscape.man_made",
                    "elementType": "geometry.fill",
                    "stylers": [
                        { "color": "#ece2d9" }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "geometry.fill",
                    "stylers": [
                        { "color": "#ccdca1" }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        { "color": "#767676" }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        { "color": "#ffffff" }
                    ]
                },
                {
                    "featureType": "poi",
                    "stylers": [
                        { "visibility": "off" }
                    ]
                },
                {
                    "featureType": "landscape.natural",
                    "elementType": "geometry.fill",
                    "stylers": [
                        { "visibility": "on" },
                        { "color": "#b8cb93" }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "stylers": [
                        { "visibility": "on" }
                    ]
                },
                {
                    "featureType": "poi.sports_complex",
                    "stylers": [
                        { "visibility": "on" }
                    ]
                },
                {
                    "featureType": "poi.medical",
                    "stylers": [
                        { "visibility": "on" }
                    ]
                },
                {
                    "featureType": "poi.business",
                    "stylers": [
                        { "visibility": "simplified" }
                    ]
                }]
        };
    }

    function ClearMap() {
        map = new window.google.maps.Map(mapElement, getMapStart());
        directionsDisplay.setMap(null);
    }

    function GetRoute() {
        var mapOptions = getMapStart();
        map = new window.google.maps.Map(document.getElementById('map_canvas'), mapOptions);
        directionsDisplay.setMap(map);

        source = $("#pickUpLocation").val();
        destination = $("#dropOffLocation").val();
        if (destination === "" && source !== "") {
            destination = source;
        }
        else if (source === "" && destination !== "") {
            source = destination;
        }


        var request = {
            origin: source,
            destination: destination,
            travelMode: window.google.maps.TravelMode.DRIVING
        };
        directionsService.route(request, function (response, status) {
            if (status === window.google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
            }
        });

        var service = new window.google.maps.DistanceMatrixService();
        service.getDistanceMatrix({
            origins: [source],
            destinations: [destination],
            travelMode: window.google.maps.TravelMode.DRIVING,
            unitSystem: window.google.maps.UnitSystem.IMPERIAL,
            avoidHighways: false,
            avoidTolls: false
        }, function (response, status) {
            if (status === window.google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status === "OK") {


                var distanceToShow = response.rows[0].elements[0].distance.text;
                var durationToShow = response.rows[0].elements[0].duration.text;

                var distance = response.rows[0].elements[0].distance.value;
                var duration = response.rows[0].elements[0].duration.value;

                $("#distance").html(distanceToShow);
                $("#duration").html(durationToShow);

                $("#distance").data("value", distance);
                $("#duration").data("value", duration);

            } else {
                ClearMap();
            }
        });
    }

    function GetAddress() {
        var lat = parseFloat(document.getElementById("txtLatitude").value);
        var lng = parseFloat(document.getElementById("txtLongitude").value);
        var latlng = new window.google.maps.LatLng(lat, lng);
        var geocoder = geocoder = new window.google.maps.Geocoder();
        geocoder.geocode({ 'latLng': latlng }, function (results, status) {
            if (status === window.google.maps.GeocoderStatus.OK) {
                if (results[1]) {
                    if (rideType === "pick")
                        $("#pickUpLocation").val(results[1].formatted_address);
                    else
                        $("#dropOffLocation").val(results[1].formatted_address);
                    GetRoute();
                }
            }
        });
    }

    $('#pickUpLocation').blur(function () {
        if ($('#pickUpLocation').val() === "") {
            ClearMap();
        } else {
            GetRoute();
        }
        GetLongLatPickUp();
    });

    $('#pickUpLocation').keyup(function (e) {
        var code = e.which; // recommended to use e.which, it's normalized across browsers
        if (code === 13) {
            if ($('#pickUpLocation').val() === "") {
                ClearMap();
            } else {
                GetRoute();
            }
        }
    });

    $('#dropOffLocation').blur(function () {
        if ($('#dropOffLocation').val() === "") {
            ClearMap();
        } else {
            GetRoute();
        }
        GetLongLatDropOff();
    });

    $('#dropOffLocation').keyup(function (e) {
        var code = e.which; // recommended to use e.which, it's normalized across browsers
        if (code === 13) {
            if ($('#dropOffLocation').val() === "") {
                ClearMap();
            } else {
                GetRoute();
            }
        }
    });

    function GetLongLatPickUp() {
        var geocoder = new google.maps.Geocoder();
        var address = $("#pickUpLocation").val();

        geocoder.geocode({ 'address': address }, function (results, status) {

            if (status === google.maps.GeocoderStatus.OK) {
                var latitude = results[0].geometry.location.lat();
                var longitude = results[0].geometry.location.lng();
                $("#txtLatitudePickUp").val(latitude);
                $("#txtLongitudePickUp").val(longitude);
            }
        });
    }

    function GetLongLatDropOff() {
        var geocoder = new google.maps.Geocoder();
        var address = "new york";

        geocoder.geocode({ 'address': address }, function (results, status) {

            if (status === google.maps.GeocoderStatus.OK) {
                var latitude = results[0].geometry.location.lat();
                var longitude = results[0].geometry.location.lng();
                $("#txtLatitudeDropOff").val(latitude);
                $("#txtLongitudeDropOff").val(longitude);
            }
        });
    }

    $("#addOrderModal").on("shown.bs.modal",
        function () {
            var mapOptions = getMapStart();
            var sourceSearchBox = new window.google.maps.places.SearchBox($('#pickUpLocation')[0]);
            sourceSearchBox.addListener('places_changed', function () {
                var places = sourceSearchBox.getPlaces();
                if (places.length === 0) {
                    $("#pickUpLocation").css({ "border": "1px solid red", "background": "#FFCECE" });
                }
                else {
                    $("#pickUpLocation").css({ "background": "", "border": "1px solid #D5D5D5" });

                }
            });
            var destinationSearchBox = new window.google.maps.places.SearchBox($('#dropOffLocation')[0]);
            destinationSearchBox.addListener('places_changed', function () {
                var places = destinationSearchBox.getPlaces();
                if (places.length === 0) {
                    $("#dropOffLocation").css({ "border": "1px solid red", "background": "#FFCECE" });
                }
                else {
                    $("#dropOffLocation").css({ "background": "", "border": "1px solid #D5D5D5" });

                }
            });
            directionsDisplay = new window.google.maps.DirectionsRenderer({
                'draggable': false
            });

            var map = new window.google.maps.Map(document.getElementById("map_canvas"), mapOptions);
        });
</script>